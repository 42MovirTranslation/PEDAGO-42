1
00:00:01,000 --> 00:00:04,000
사용자 권한에 대한 비디오에 오신 것을 환영합니다

2
00:00:04,000 --> 00:00:09,000
Unix 시스템의 모든 파일에는 권한이 있습니다

3
00:00:09,000 --> 00:00:12,000
바로 확인해 보죠

4
00:00:12,000 --> 00:00:19,000
예를 들어 여기에는 각 파일에 대한 일련의 문자가 있습니다

5
00:00:19,000 --> 00:00:25,000
이 문자들은 각각 접근, 쓰기, 실행 권한을 나타냅니다

6
00:00:25,000 --> 00:00:28,000
세 글자로 구성된 세 개의 그룹으로 표현되죠

7
00:00:28,000 --> 00:00:33,000
사용자 자신, 사용자가 속한 그룹, 그리고 그 외의 사람들
(user, group, others)

8
00:00:33,000 --> 00:00:39,000
이 예시에서 text2.txt의 맨 앞의 세 글자는 rwx입니다

9
00:00:39,000 --> 00:00:50,000
저, studio 42가 이 파일을 읽고 편집하고
명령으로 실행할 수 있는 권한이 있다는 의미입니다

10
00:00:50,000 --> 00:00:55,000
다음 3개는 그룹, staff의 권한입니다

11
00:00:55,000 --> 00:01:01,000
staff 그룹의 사람들은 이 파일을 읽고 실행할 수 있지만 수정할 수는 없습니다

12
00:01:01,000 --> 00:01:09,000
다음 3개는 그 외의 사람들입니다
이들은 파일을 실행할 수는 있지만 읽고 수정할 수는 없습니다

13
00:01:09,000 --> 00:01:14,000
이 권한들의 모든 조합이 사용 가능합니다

14
00:01:14,000 --> 00:01:23,000
권한을 바꿀 때는 chmod 명령어를 사용합니다

15
00:01:23,000 --> 00:01:30,000
chmod는 다양한 방법으로 사용할 수 있어요

16
00:01:30,000 --> 00:01:35,000
예를 들어 Other에 읽기 권한을 추가해 볼게요

17
00:01:35,000 --> 00:01:41,000
users는 u, group은 g, other는 o로 표시할 수 있습니다

18
00:01:41,000 --> 00:01:45,000
other의 권한을 수정하고 싶습니다

19
00:01:45,000 --> 00:01:50,000
권한을 추가하거나 제거할 수 있습니다

20
00:01:50,000 --> 00:01:55,000
지금은 읽기 권한을 추가해주고 싶죠

21
00:01:55,000 --> 00:02:00,000
o+r을 써서 읽기 권한을 추가해줄 수 있습니다

22
00:02:00,000 --> 00:02:04,000
이제 other에 읽기 권한이 추가될 겁니다

23
00:02:04,000 --> 00:02:09,000
매개변수로는 권한을 수정해줄 파일명을 입력해 줍니다

24
00:02:09,000 --> 00:02:11,000
ls -l로 확인하면

25
00:02:11,000 --> 00:02:19,000
other에 읽기 권한이 추가된 것을 볼 수 있습니다

26
00:02:19,000 --> 00:02:25,000
지금부턴 text2.txt 파일을 실행 불가 파일로 만들어 볼 겁니다

27
00:02:25,000 --> 00:02:29,000
이를 위해서 모든 실행 권한을 제거할 것입니다

28
00:02:29,000 --> 00:02:35,000
x는 이것이 실행 가능한 파일임을 쉘에게 알려주기에

29
00:02:35,000 --> 00:02:41,000
실행 불가로 만들기 위해선 이 권한을 제거해야 합니다

30
00:02:41,000 --> 00:02:50,000
우선 모든 사용자(u, g, o)를 나타내는 "a"를 타이핑하고

31
00:02:50,000 --> 00:02:58,000
권한을 지우기 위해 -와 x를 씁니다

32
00:02:58,000 --> 00:03:02,000
이는 모든 사용자의 실행 권한을 제거합니다

33
00:03:02,000 --> 00:03:10,000
이제 test2를 확인해보면 모두에게 실행 권한이 제거되었음을 알 수 있습니다

34
00:03:10,000 --> 00:03:17,000
이번에는 group에 쓰기 권한을 주고 싶네요

35
00:03:17,000 --> 00:03:24,000
이렇게 그룹을 나타내고 쓰기 권한을 부여합니다

36
00:03:24,000 --> 00:03:28,000
확인해보니 권한이 잘 적용되어 있네요

37
00:03:28,000 --> 00:03:33,000
권한을 표현하는 또 다른 방법이 있습니다

38
00:03:33,000 --> 00:03:44,000
rwx 대신 4, 2, 1의 합을 사용할 수 있습니다

39
00:03:44,000 --> 00:03:58,000
이를 이용하면 rwx를 작성하는 대신 421을 작성하여 7을 산출합니다

40
00:03:58,000 --> 00:04:07,000
우리가 rwx나 rw- 혹은 r--을 원한다고 생각해보세요

41
00:04:07,000 --> 00:04:12,000
rwx는 421로 쓸 수 있다고 했어요

42
00:04:12,000 --> 00:04:20,000
rw-는 420으로 쓸 수 있겠죠

43
00:04:20,000 --> 00:04:31,000
r--은 400으로 쓸 수 있을 거고요

44
00:04:31,000 --> 00:04:34,000
이를 응용해서 세 자리 표기법을 사용해볼 겁니다

45
00:04:34,000 --> 00:04:40,000
4, 2 그리고 1을 더하면 7이고, 4, 2와 0을 더하면 6

46
00:04:40,000 --> 00:04:44,000
마지막으로 4에 0을 두 번 더하면 4

47
00:04:44,000 --> 00:04:50,000
앞에 적은 것들을 지워보니 우리가 원하는 권한이 764가 되었습니다

48
00:04:50,000 --> 00:04:54,000
그리고 764는 앞의 문자열 세 쌍과 똑같이 동작합니다

49
00:04:54,000 --> 00:04:59,000
ctrl+D를 눌러 라인의 앞을 지울게요

50
00:04:59,000 --> 00:05:05,000
그리고 chmod 764 test2.txt를 입력하고

51
00:05:05,000 --> 00:05:22,000
확인해보면 여기에 rwx, rw-, r--이 순서대로 들어간 것을 볼 수 있습니다

52
00:05:22,000 --> 00:05:27,000
이것이 파일의 권한을 다루는 두 가지 방법입니다

53
00:05:27,000 --> 00:05:50,000
숫자 방식은 추상적이기 때문에 복잡하지만
그만큼 명령을 이행하는 시간을 줄여줄 겁니다

54
00:05:50,000 --> 00:59:59,000
이것으로 chmod에 대한 비디오를 마무리 짓겠습니다
<< translated by inyang, ji-kim, yeslee, mki and mseo :) >>
