1
00:00:01,000 --> 00:00:04,000
이번 영상에서는 몇 가지 기본적인 명령어에 대해 알아보겠습니다

2
00:00:04,000 --> 00:00:08,000
첫 번째 명령어인 echo는 매우 단순해요

3
00:00:08,000 --> 00:00:11,000
echo는 여러분이 표준 출력의 매개변수로 입력한 내용을 출력합니다

4
00:00:11,000 --> 00:00:18,000
만약 제가 echo bonjour이라고 입력하면 bonjour이 출력되죠

5
00:00:18,000 --> 00:00:25,000
echo가 스크립트에 얼마나 도움을 주는지는
뒤에 나올 영상들에서 확인하실 수 있습니다

6
00:00:25,000 --> 00:00:29,000
또 다른 유용한 명령어로는 ls가 있습니다

7
00:00:29,000 --> 00:00:35,000
ls는 현재 디렉토리에 있는 것들의 목록을 출력합니다

8
00:00:35,000 --> 00:00:39,000
예를 들면 현재 디렉토리에는 test.txt라는 파일이 있군요

9
00:00:39,000 --> 00:00:44,000
ls에는 많은 옵션이 있습니다

10
00:00:44,000 --> 00:00:47,000
man을 열어보면 내용이 꽤 많아 보이네요

11
00:00:47,000 --> 00:00:52,000
지금은 오직 -l 옵션만 보도록 할게요

12
00:00:52,000 --> 00:00:55,000
현재 디렉토리의 상세한 목록을 볼 수 있습니다

13
00:00:55,000 --> 00:01:03,000
text.txt라는 파일명 이외에도 다른 값들을 볼 수 있죠

14
00:01:03,000 --> 00:01:11,000
각각 파일 권한, 소유자, 그룹, 생성날짜입니다

15
00:01:11,000 --> 00:01:14,000
이것들은 조금 이따가 다시 보도록 합시다

16
00:01:14,000 --> 00:01:17,000
이번엔 명령어 cat에 관해 이야기해 봅시다

17
00:01:17,000 --> 00:01:21,000
cat은 디렉토리가 아닌 파일 안의 내용물을 보여주죠

18
00:01:21,000 --> 00:01:28,000
cat을 이용해 test.txt의 내용물을 출력해봅시다

19
00:01:28,000 --> 00:01:35,000
그전에 팁을 하나 드릴게요, Tab 키를 누르면

20
00:01:35,000 --> 00:01:38,000
적고 있던 이름을 자동으로 완성해 줍니다

21
00:01:38,000 --> 00:01:44,000
단순히 "te"라고 입력했지만 현재 디렉토리 안에는 오직 test.txt만 있으니

22
00:01:44,000 --> 00:01:49,000
여러분이 입력하던 매개변수가 test.txt라는 것을 쉽게 알 수 있습니다

23
00:01:49,000 --> 00:01:52,000
매개변수 명을 일일이 다 칠 필요가 없다는 뜻이죠

24
00:01:52,000 --> 00:01:58,000
명령어도 마찬가지입니다

25
00:01:58,000 --> 00:02:02,000
다시 cat으로 돌아옵시다, cat은 파일의 내용물을 화면에 출력해 줍니다

26
00:02:02,000 --> 00:02:08,000
cat -e로 옵션을 주면 추가 정보를 출력해줘요

27
00:02:08,000 --> 00:02:14,000
출력 불가능한 부호나 하드 리턴(문단 전환을 위한 개행) 같은 것들이죠

28
00:02:14,000 --> 00:02:18,000
하드 리턴 때문에 많이 사용하게 될 겁니다

29
00:02:18,000 --> 00:02:27,000
cat -e는 하드 리턴 자리에 달러 표시($)를 출력해줍니다

30
00:02:27,000 --> 00:02:31,000
또 다른 흥미로운 명령어로는 touch가 있습니다

31
00:02:31,000 --> 00:02:34,000
touch는 여러 가지 기능을 합니다

32
00:02:34,000 --> 00:02:40,000
예를 들면 파일의 마지막 접근 날짜나 수정 날짜를 바꿀 수 있습니다

33
00:02:40,000 --> 00:02:44,000
여기 출력된 날짜 말이죠

34
00:02:44,000 --> 00:02:50,000
그와 더불어 새 파일을 만드는 것도 가능합니다

35
00:02:50,000 --> 00:02:53,000
예로 touch test2.txt를

36
00:02:53,000 --> 00:03:00,000
다른 매개변수 없이 입력하면 같은 이름의 파일이 생성됩니다

37
00:03:00,000 --> 00:03:18,000
touch의 man으로 들어가 -t 항목을 보면
파일의 접근/수정 날짜를 바꿀 수 있다고 하네요

38
00:03:18,000 --> 00:03:23,000
c는 세기, 그리고 년도, 월, 일, 시, 분, 초를 나타내는군요

39
00:03:23,000 --> 00:03:27,000
다시 touch의 시놉시스로 돌아가 보면

40
00:03:27,000 --> 00:03:31,000
여기에 있네요, -t 옵션을 주고

41
00:03:31,000 --> 00:03:40,000
날짜는 최소 월, 일, 시, 분을 적어야 하는군요

42
00:03:40,000 --> 00:03:46,000
이제 text2.txt의 날짜를 바꾸러 가보죠

43
00:03:46,000 --> 00:03:49,000
Q를 눌러 man을 종료합니다

44
00:03:49,000 --> 00:03:54,000
이제 touch -t를 이용해 날짜를 수정해 보죠

45
00:03:54,000 --> 00:04:07,000
일단 예시로 20130715를 입력하고, 시간으로 0842를 넣어 보겠습니다

46
00:04:07,000 --> 00:04:13,000
그리고 이 날짜를 test2.txt에 적용해 볼 겁니다

47
00:04:13,000 --> 00:04:17,000
이제 Tab 키를 눌러서 자동 완성을 하려 했지만 동작이 멈췄습니다
값이 모호하기 때문이죠

48
00:04:17,000 --> 00:04:20,000
제가 원하는 것이 test일까요? test2일까요?

49
00:04:20,000 --> 00:04:24,000
Tab 키를 두 번 누르면 두 가지 옵션이 주어집니다

50
00:04:24,000 --> 00:04:33,000
그리고 2를 붙여주면 이제 애매함이 사라졌죠

51
00:04:33,000 --> 00:04:36,000
마지막 날짜는 5월 10일 11시 15분이었고

52
00:04:36,000 --> 00:04:39,000
touch와 매개변수를 사용해서 7월 15일 20시 13분으로 바꿨습니다

53
00:04:39,000 --> 00:04:42,000
42가 시작된 날이죠

54
00:04:42,000 --> 00:04:45,000
ls -l을 다시 사용해서 확인해보면

55
00:04:45,000 --> 00:04:50,000
날짜가 바뀐 것을 확인할 수 있습니다

56
00:04:50,000 --> 00:04:55,000
날짜가 과거이고 6개월 이상 지났으므로

57
00:04:55,000 --> 00:04:59,000
시간은 출력되지 않습니다, 연도만 나타나지요

58
00:04:59,000 --> 00:59:59,000
이것으로 기본 명령어에 대한 영상을 마무리하겠습니다
<< translated by inyang, mseo, mki, yeslee and ji-kim :D >>
