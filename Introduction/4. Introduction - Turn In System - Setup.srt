1
00:00:00,000 --> 00:00:04,340
이 영상에서는 프로젝트 제출을 위해 시스템 초기 세팅을 하는 방법에 대해 설명하겠습니다

2
00:00:04,340 --> 00:00:06,040
더 정확히 말하자면, git 세팅입니다

3
00:00:06,040 --> 00:00:10,420
ssh 키를 만들어서 온라인에 업로드해야 합니다

4
00:00:10,420 --> 00:00:12,320
어떻게 하는지 보여드리죠

5
00:00:12,320 --> 00:00:18,880
터미널을 열어서, "ssh-keygen" 명령을 사용하겠습니다

6
00:00:19,320 --> 00:00:20,920
Enter를 눌러주세요.

7
00:00:20,920 --> 00:00:22,820
ssh 키를 만들 것이라고 알려줍니다.

8
00:00:22,940 --> 00:00:26,700
ssh키는 ‘.’ 으로 시작하는 “숨겨진” 디렉토리에 만들어집니다.

9
00:00:26,700 --> 00:00:31,540
그것은 .ssh라고 불리며, 당신의 디렉토리에 id_rsa 키를 만들 것입니다.

10
00:00:31,740 --> 00:00:35,060
Enter 키를 누르시면 됩니다.

11
00:00:35,130 --> 00:00:37,130
원한다면, 암호를 입력하실 수도 있습니다.

12
00:00:37,500 --> 00:00:39,620
입력하지 않을수도 있습니다. 원하는대로 하세요.

13
00:00:39,620 --> 00:00:43,080
다만 암호를 자주 입력해야 할 거에요.

14
00:00:43,300 --> 00:00:46,680
일단 입력하지 않는 것을 추천드립니다. 나중에라도 안전하게 암호를 입력할수 있습니다.

15
00:00:46,809 --> 00:00:49,139
그냥 Enter 키만 눌러주면 암호가 입력되지 않을 것입니다.

16
00:00:49,440 --> 00:00:52,300
끝났습니다. 잘 만들어졌네요.

17
00:00:52,300 --> 00:00:55,120
id_rsa 키와

18
00:00:55,540 --> 00:00:57,880
id_rsa.pub 공개키가 잘 만들어졌습니다.

19
00:00:58,120 --> 00:01:02,820
"cat ~/.ssh/id_rsa"를 입력하면

20
00:01:03,480 --> 00:01:06,520
여기 비밀키인 RSA PRIVATE KEY가 출력됩니다.

21
00:01:06,700 --> 00:01:10,320
이건 절대 누구에게도 주지 말아야합니다.

22
00:01:10,580 --> 00:01:16,900
그렇지 않으면 누군가 마치 여러분 자신인 것처럼 git에 접근할 수 있을 것입니다. 일종의 신원 도용인 셈이죠.


23
00:01:17,580 --> 00:01:21,880
여러분이 자유롭게 공유할 수 있는 것은,

24
00:01:22,140 --> 00:01:25,000
적어도 지금의 시스템이 제대로 작동하는 한

25
00:01:25,300 --> 00:01:31,460
키의 공용 부분을 포함하는 "id_rsa.pub" 파일입니다.

26
00:01:31,680 --> 00:01:35,880
어떻게 작동하는지는 설명드리지 않겠지만, 공개키와 비밀키 시스템이 어떻게 작동하는지 찾아보셔도 좋습니다.

27
00:01:37,140 --> 00:01:39,140
이걸 복사할 수 있습니다.

28
00:01:39,180 --> 00:01:41,760
전체를 드래그해서 Command+C를 하세요.

29
00:01:41,980 --> 00:01:45,920
그리고 인트라넷으로 가서

30
00:01:46,300 --> 00:01:51,080
프로필 사진을 클릭하고, 설정을 클릭한 다음, "SSH Key"를 클릭합니다.

31
00:01:51,080 --> 00:01:53,080
“New SSH Key”를 클릭하세요.

32
00:01:53,740 --> 00:01:58,400
복사한 것을 붙여넣습니다. 'ssh-rsa'로 시작해야 합니다.

33
00:01:58,630 --> 00:02:03,509
엄청 긴 글자들이 있고, 인트라 아이디@와 지금 접속한 PC의 이름으로 끝나야 합니다.

34
00:02:04,020 --> 00:02:06,660
"submit"을 클릭한 뒤, 잘 되었다면

35
00:02:06,940 --> 00:02:11,600
초록색 결과창이 나올 것입니다.

36
00:02:11,600 --> 00:02:13,600
이제 여러분은 이 키를 가지고 있습니다.

37
00:02:13,960 --> 00:02:16,900
이 키로 git을 사용할 수 있게 됩니다.

38
00:02:17,280 --> 00:02:21,380
예를 들어, 개인 키가 유출되면 또 다른 키를 새로 만들 수 있습니다.

39
00:02:21,380 --> 00:02:23,300
그러면 다시 입력하면 됩니다.

40
00:02:23,300 --> 00:02:25,780
조심해~! 한 번에 하나의 키만 가지고 있을 수 있습니다.

41
00:02:26,100 --> 00:02:30,620
만약 어느 순간 키가 변형되거나, 어떤 문제가 생긴다면

42
00:02:30,640 --> 00:02:32,220
그냥 키를 다시 만들기만 하면 됩니다.

43
00:02:32,220 --> 00:02:34,220
“New SSH Key”를 사용하여 키를 다시 입력하면

44
00:02:34,220 --> 00:02:36,160
git에 다시 접근할 수 있습니다.

45
00:02:36,160 --> 00:02:39,780
이제 git을 사용하기 위한 준비가 끝났습니다.
<< translated by inyang, chelee, mki , yeslee :) >>
