1
00:00:00,160 --> 00:00:04,980
이번 비디오에서는 다시 한 번 define에 관해 이야기할 겁니다, 하지만 변수를 써볼 겁니다

2
00:00:05,200 --> 00:00:11,190
우리가 매크로를 사용하기 전엔 단순히 텍스트를 대체하는 것이었습니다

3
00:00:11,190 --> 00:00:13,380
똑같은 걸 할 것이지만, 변수들 덕분에 조금 더 영리하게, 자동으로 어떤 부분들을 대체할 겁니다.

4
00:00:14,530 --> 00:00:20,729
다시 한번 말하지만 이것은 텍스트 대 텍스트 교체입니다,
이건 아주 흥미로운 부분입니다

5
00:00:20,940 --> 00:00:26,549
지금 보여드리겠습니다, 이전 비디오의 예제를 사용할 겁니다

6
00:00:27,160 --> 00:00:28,560
이제 이것을 단순화할 것입니다

7
00:00:29,380 --> 00:00:32,519
POUIC을 지우고, LOL로 바꿔두고…

8
00:00:33,130 --> 00:00:37,199
괄호하고 세미콜론도 지우고… 아까 이야기로 돌아가 볼까요

9
00:00:38,800 --> 00:00:42,989
예를 들어, 재미있게… 그 전에 컴파일되는지 보여드릴게요

10
00:00:44,440 --> 00:00:46,440
재미있게, 여기에 콤마(,)를 넣어봅시다

11
00:00:48,420 --> 00:00:54,140
그리고 여기에 “%d”…  콤마 다음에 x를 넣을게요

12
00:00:54,460 --> 00:00:57,220
이제 LOL은 변수 “x”를 요청할 겁니다

13
00:00:57,790 --> 00:01:01,709
이제, 어떻게 작동할까요? 변수의 이름과 괄호가 있기 때문에

14
00:01:02,140 --> 00:01:05,610
여러 변수를 넣을 수도 있습니다, 다른 예를 보여드릴게요

15
00:01:06,240 --> 00:01:08,580
다시 컴파일을 시도하면 어떻게 될까요?

16
00:01:09,460 --> 00:01:16,900
define “LOL”을 찾을 수 없다고 합니다, 이건 LOL()을
대체하려고 하기 때문입니다, 하지만 저는 LOL을 썼죠

17
00:01:17,520 --> 00:01:21,960
컴파일러의 경우 LOL이 정의되지 않았으므로, 대체하지 않고
컴파일 시 LOL을 유지합니다, 그래서 문제가 있는 겁니다

18
00:01:22,320 --> 00:01:25,040
이제 LOL(42)를 써볼게요

19
00:01:27,220 --> 00:01:29,489
결과는, “lol 42”가 출력됩니다

20
00:01:30,000 --> 00:01:34,260
왜일까요? cpp로 실제 일어난 일을 자세하게 살펴보면

21
00:01:34,840 --> 00:01:37,880
“printf(“lol %d\n”, 42)”가 있음을 볼 수 있습니다

22
00:01:37,880 --> 00:01:40,660
지금 여기 42 대신에…

23
00:01:41,160 --> 00:01:42,930
뭐라고 쓸까요…

24
00:01:42,930 --> 00:01:45,480
"youpi"를 쓰면 문제가 생길 겁니다

25
00:01:46,200 --> 00:01:47,790
왜냐면

26
00:01:47,790 --> 00:01:49,313
"youpi"를 모를 테니까요

27
00:01:49,313 --> 00:01:53,020
cpp로 보면, “lol %d\n, youpi" 가 표시됩니다

28
00:01:53,020 --> 00:01:54,900
예시를 더 들기 위해서 여기에

29
00:01:55,220 --> 00:01:58,420
int youpi라는 변수를 쓸게요

30
00:01:58,420 --> 00:02:00,180
"youpi = 42"

31
00:02:01,460 --> 00:02:04,340
그리고

32
00:02:06,720 --> 00:02:08,720
실제로 

33
00:02:08,840 --> 00:02:12,400
이렇게 쓰면

34
00:02:12,460 --> 00:02:17,140
잘 됩니다, 강조하지만 이 작업은 텍스트를 대체하는 겁니다
둘 이상의 변수를 사용할 수도 있습니다

35
00:02:20,600 --> 00:02:25,060
두 번째 %d를 써볼게요, 그리고 컴파일이 되게 하려고 여기에 y를 쓸게요

36
00:02:25,060 --> 00:02:26,760
텍스트를 대체하는 것입니다!

37
00:02:27,200 --> 00:02:29,980
텍스트를 대체한다는 걸 이해하는 게 정말 중요합니다

38
00:02:29,980 --> 00:02:31,000
컴파일하려 하면…

39
00:02:31,040 --> 00:02:33,320
LOL을 찾을 수 없대요, 왜? 아, 너무 멍청했네…

40
00:02:34,500 --> 00:02:36,500
"LOL"

41
00:02:36,680 --> 00:02:40,820
두 개의 매개변수가 필요합니다,
그래서, 여기에 하나를 넣고, 두 번째를 넣어야 해요

42
00:02:41,460 --> 00:02:43,120
두 번째 매개변수를 넣고 컴파일하면

43
00:02:43,220 --> 00:02:45,580
돌아갑니다, “lol 42 87”이 떠요

44
00:02:46,680 --> 00:02:50,760
텍스트 대체이기 때문에 원하는 대로 할 수 있습니다

45
00:02:50,900 --> 00:02:53,840
이건 아주 강력합니다, 매크로에 코드를 넣을 수 있습니다

46
00:02:54,569 --> 00:02:59,598
이렇게 하면 코드를 읽기 복잡해져서 위험합니다,
우리는 무슨 일이 일어나고 있는지 정말 알 수 없을지도 모릅니다

47
00:03:00,359 --> 00:03:03,649
이걸 확인하는 유일한 방법은 “cpp”와 같은 것을 사용하는 것입니다

48
00:03:03,780 --> 00:03:09,709
이를 통해 전처리 결과를 볼 수 있고
필요한 경우 코드를 변경할 수 있습니다

49
00:03:10,020 --> 00:03:15,800
변수와 함께 "define"을 남용하면 코드를 읽기가 매우 어려울 수 있습니다

50
00:03:16,320 --> 00:03:18,320
하지만 큰 장점이 있습니다

51
00:03:18,780 --> 00:03:24,580
표준 C 라이브러리에서 많이 사용되며 가끔은 아주 유용하게 사용됩니다

52
00:03:25,680 --> 00:03:29,419
이제 변수와 함께 "define"을 사용하는 법도 알게 되었네요!
<< translated by inyang, ji-kim, yeslee, mki and mseo :) >>
