1
00:00:02,360 --> 00:00:05,060
[박수]

2
00:00:05,060 --> 00:00:07,440
이번 영상에서는

3
00:00:07,440 --> 00:00:09,059
함수의 리턴 값이란 개념에 관해 얘기하겠습니다

4
00:00:09,059 --> 00:00:12,000
그리고 함수의 값을 반환해주는

5
00:00:12,000 --> 00:00:16,109
"return" 키워드에 대해 배워봅시다

6
00:00:16,109 --> 00:00:18,270
함수를 호출한 뒤 특정 값을 되받을 수 있다는 것은

7
00:00:18,270 --> 00:00:22,020
매우 유용하죠

8
00:00:22,020 --> 00:00:25,199
예로 수학 계산을 실행하고

9
00:00:25,199 --> final result of this calculation
그 결과 값을 반환하는 함수를 들 수 있겠죠

10
00:00:28,680 --> 00:00:30,929
이해를 돕기 위해 다른 예를 들어보겠습니다

11
00:00:30,929 --> 00:00:35,010
전에 예시로 썼던 함수를 다시 쓰죠

12
00:00:35,010 --> 00:00:38,070
“Coucou 42”를 출력하는 “void fct(void)” 함수입니다

13
00:00:38,070 --> 00:00:43,020
먼저 프로토타입을 수정해 봅시다

14
00:00:43,020 --> 00:00:45,690
이 반환 값을 int형으로 바꿉니다

15
00:00:45,690 --> 00:00:50,640
잠시 중요한 사항을 짚고 넘어가겠습니다

16
00:00:50,640 --> 00:00:52,649
C에서는, 여러 가지 유형의 값을 반환할 수 없습니다

17
00:00:52,649 --> 00:00:54,239
한 번에 한 값만 가능하단 얘기죠

18
00:00:54,239 --> 00:00:56,610
다음에 보시겠지만,

19
00:00:56,610 --> 00:00:58,289
구조체를 사용하면

20
00:00:58,289 --> 00:01:00,480
한 묶음의 값을 반환하는 게 가능합니다

21
00:01:00,480 --> 00:01:02,219
하지만 현재로써는

22
00:01:02,219 --> 00:01:03,449
우리가 아는 유형에 집중해 보도록 하죠

23
00:01:03,449 --> 00:01:06,080
int형이라던가 float형, char형, 등등…

24
00:01:06,080 --> 00:01:09,360
int형을 예시로 생각해보죠

25
00:01:09,360 --> 00:01:11,760
이 함수는 한 개의 int형 값을 반환할 것입니다

26
00:01:11,760 --> 00:01:18,390
아래 함수 선언을 수정하죠

27
00:01:18,390 --> 00:01:19,409
이 상태로 컴파일하면 무슨 일이 일어나는지 봅시다

28
00:01:19,409 --> 00:01:21,720
에러가 났군요

29
00:01:21,720 --> 00:01:26,189
컴파일러의 말로는, 함수가 끝에 도달했지만

30
00:01:26,189 --> 00:01:28,650
void형도 아니면서 아무것도 반환하지 않았답니다

31
00:01:28,650 --> 00:01:31,229
그러니까 이 함수는 void형을 반환했습니다

32
00:01:31,229 --> 00:01:34,470
아무것도 반환하지 않았다는 뜻이죠

33
00:01:34,470 --> 00:01:36,420
int형을 반환했어야 하는 데 말입니다

34
00:01:36,420 --> 00:01:38,970
이제 컴파일러를 만족하게 해주기 위해

35
00:01:38,970 --> 00:01:40,710
int형 값을 반환하도록 하겠습니다, 언제나처럼 그 값은 “42”입니다

36
00:01:40,710 --> 00:01:48,720
자, 이제 “42”가 반환됐지만 아무 일도 일어나지 않습니다

37
00:01:48,720 --> 00:01:50,460
이 반환 값을 사용하는 방법은

38
00:01:50,460 --> 00:01:53,759
매우 간단합니다, 이 함수를 호출하기 전에,

39
00:01:53,759 --> 00:01:56,450
int형 변수 "i"를 선언합니다

40
00:01:56,450 --> 00:02:03,990
이 “i”에 “fct”가 반환한 값을 넣어줍니다, 좋습니다

41
00:02:03,990 --> 00:02:07,090
무엇이 바뀌었는지 보기 위해

42
00:02:07,090 --> 00:02:17,080
“fct”가 실행된 뒤의 “i”값을 출력하도록 합시다

43
00:02:17,080 --> 00:02:18,160
이해하기 쉽도록

44
00:02:18,160 --> 00:02:20,170
무언가를 더 해보죠

45
00:02:20,170 --> 00:02:25,980
여기에 “i”에게 0의 값을 주고 한 번 출력하게 합시다

46
00:02:26,860 --> 00:02:29,350
이렇게 하면 보기 더 편하겠죠, 이다음에 “fct”가 호출됩니다

47
00:02:29,350 --> 00:02:32,440
“fct”의 리턴값을 “i”에 저장하고요

48
00:02:32,440 --> 00:02:36,070
그리고는 “i” 값을 출력합니다, 짜잔!

49
00:02:36,070 --> 00:02:37,960
"main"에서 "printf" 함수를 호출해

50
00:02:37,960 --> 00:02:40,180
“i”의 값을 출력하게 했죠, 0입니다

51
00:02:40,180 --> 00:02:43,330
그다음에 “fct” 함수가 호출됐습니다

52
00:02:43,330 --> 00:02:44,740
“Coucou 42”를 출력했습니다

53
00:02:44,740 --> 00:02:47,860
그다음으로 “42”를 반환했고 그 값이 “i”에 저장됐죠

54
00:02:47,860 --> 00:02:50,800
그래서 마지막으로 42가 출력됐습니다

55
00:02:50,800 --> 00:02:54,670
이 “return” 키워드의 특징은,

56
00:02:54,670 --> 00:03:00,250
이것이 쓰이면, 값이 반환됐으므로 함수에서 바로 빠져나온다는 것입니다

57
00:03:00,250 --> 00:03:01,240
그 이후에 적힌 코드는 실행되지 않습니다

58
00:03:01,240 --> 00:03:05,380
만약 “return (42)”를 “fct” 함수의 첫 줄로 옮기면

59
00:03:05,380 --> 00:03:08,800
“Coucou”는 출력되지 않습니다

60
00:03:08,800 --> 00:03:11,680
왜냐하면 “42”라는 값을 바로 반환했기 때문이죠

61
00:03:11,680 --> 00:03:14,380
예를 들어봅시다

62
00:03:14,380 --> 00:03:17,530
이대로 둔다면 (“return 42”), 42 값을 반환할 겁니다

63
00:03:17,530 --> 00:03:23,050
하지만 if를 써서 조건을 넣는다면 어떨까요

64
00:03:23,050 --> 00:03:26,770
“int i”은 0으로 초기화해 놓읍시다

65
00:03:26,770 --> 00:03:30,400
만약 “i”가 10보다 크다면,

66
00:03:30,400 --> 00:03:32,820
“return (1)”을 써서 1의 값을 반환하도록 합니다

67
00:03:36,380 --> 00:03:40,070
이제 컴파일을 해보면, 항상 “42”가 반환되는 것이 보이죠

68
00:03:40,070 --> 00:03:41,660
조건이 만족하지 않았기 때문에

69
00:03:41,660 --> 00:03:43,520
“return (1)”은 실행되지 않았습니다

70
00:03:43,520 --> 00:03:47,030
만약 초기값을 수정해서

71
00:03:47,030 --> 00:03:48,740
“i = 100”이라고 한다면

72
00:03:48,740 --> 00:03:51,350
그 값은 10보다 크죠, 그러므로 예상하셨다시피,

73
00:03:51,350 --> 00:03:53,210
바로 “1”의 값을 반환합니다

74
00:03:53,210 --> 00:03:55,820
그리고 “Coucou 42”는 출력하지 않습니다

75
00:03:55,820 --> 00:03:57,830
“42” 또한 출력하지 않죠, 왜냐하면, 이미 “1”을 반환했고

76
00:03:57,830 --> 00:04:00,220
그와 동시에 함수를 탈출했기 때문이죠

77
00:04:00,220 --> 00:04:03,170
짜잔, 당신은 이제

78
00:04:03,170 --> 00:04:04,970
함수의 리턴값을 받을 수 있게 되었습니다

79
00:04:04,970 --> 00:04:08,450
이 값을 나중에 코드나 메인에서 재사용할 수도 있고

80
00:04:08,450 --> 00:04:09,920
아니면 이 값을 가지고 다른 일을 할 수도 있겠죠

81
00:04:09,920 --> 00:04:12,670
etc etc
뭐, 어쨌든지 간에요

<< translated by ji-kim, inyang, chelee, mki, yeslee and mseo :) >>
