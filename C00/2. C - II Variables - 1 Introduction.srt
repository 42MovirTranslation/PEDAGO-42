1
00:00:01,000 --> 00:00:02,000
환영합니다, 이 비디오에서는 변수에 대해 알려드릴 것입니다

2
00:00:02,000 --> 00:00:04,000
변수는 프로그램의 핵심입니다

3
00:00:04,000 --> 00:00:12,000
변수에 데이터를 저장하고 계산에 사용하거나,

4
00:00:08,000 --> 00:00:12,000
사용자 명령에 응답하는데 사용할 수 있습니다 

5
00:00:12,000 --> 00:00:14,000
첫 번째 예시는 계산기입니다

6
00:00:14,000 --> 00:00:20,000
12 + 15 = 를 입력하고 무슨 일이 일어나는지 보겠습니다,

7
00:00:20,000 --> 00:00:26,000
+를 입력했을 때, 메모리에는 12가 들어갑니다

8
00:00:26,000 --> 00:00:30,000
또한 어떤 연산을 해야 하는지 알고 있습니다

9
00:00:30,000 --> 00:00:36,000
그리고 15, =이 들어오면, 메모리는 15와 등호(=)를 저장합니다

10
00:00:36,000 --> 00:00:41,000
메모리에서는 12와 15, +를 찾아냅니다

11
00:00:41,000 --> 00:00:47,000
그리고 화면에 27을 표시합니다

12
00:00:47,000 --> 00:00:50,000
변수는 데이터를 저장할 공간입니다

13
00:00:50,000 --> 00:00:56,000
참고로, 컴퓨터는 오직 비트라고 불리는 1과 0 만 가지고 있습니다

14
00:00:56,000 --> 00:01:01,000
비트는 1 또는 0을 포함하는 작은 메모리일 뿐입니다

15
00:01:01,000 --> 00:01:15,000
우리는 주로 바이트를 사용하며, 1 바이트는 8개의 연속된 비트로 구성됩니다

16
00:01:15,000 --> 00:01:30,000
Mb와 MB는 유의해야 하는데, MB(Mega Byte)는 Mb(Mega Bits)보다 8배 더 큽니다

17
00:01:30,000 --> 00:01:38,000
다른 비디오에서는, 바이너리와 비트 및 바이트가 어떻게 동작하는지를 다루며,

18
00:01:38,000 --> 00:01:41,000
단지 1바이트가 8비트의 조합이라는 것과

19
00:01:41,000 --> 00:01:45,000
우리가 다양하고 유용한 걸 할 수 있도록 하는 것만 알면 됩니다

20
00:01:45,000 --> 00:01:47,000
여러분들은 변수를 어떻게 정의 하나요?

21
00:01:47,000 --> 00:01:52,000
여기서부터 출발해봅시다

22
00:01:52,000 --> 00:02:00,000
변수는 자료형 다음에 식별자나 변수명이 오는 것으로 정의됩니다

23
00:02:00,000 --> 00:02:08,000
정수를 나타내는 int의 경우, 소수점 없이 양수 또는 음수로 시작합니다

24
00:02:08,000 --> 00:02:10,000
int에는 최대값과 최소값이 있습니다

25
00:02:10,000 --> 00:02:20,000
왜냐하면 그것은 메모리의 4바이트에 해당하기 때문입니다

26
00:02:20,000 --> 00:02:28,000
즉 32비트이고, 32개의 비트 모두가 1일 때 최대값입니다

27
00:02:28,000 --> 00:02:32,000
이 부분은 나중에 다뤄봅시다

28
00:02:32,000 --> 00:02:38,000
이 정수는 이름이 필요합니다, 여기서는 글자 a를 사용할 겁니다

29
00:02:38,000 --> 00:02:50,000
변수명의 첫 글자는 밑줄, 소문자, 대문자가 될 수 있고,

30
00:02:50,000 --> 00:03:00,000
그 뒤에는 문자, 밑줄, 혹은 숫자가 더 이어붙을 수 있습니다

31
00:03:00,000 --> 00:03:06,000
그래서 여기 예시들은 모두 가능합니다

32
00:03:06,000 --> 00:03:19,000
이것들은 모두 잘 작동할 겁니다

33
00:03:19,000 --> 00:03:26,000
컴파일을 통해 확인할 수 있습니다 좋아요, 에러가 없네요

34
00:03:26,000 --> 00:03:30,000
변수명을 변경해봅시다

35
00:03:30,000 --> 00:03:41,000
문자 a만을 사용하여, 정수형 변수 a를 선언합니다

36
00:03:41,000 --> 00:03:43,000
이제 이 변수를 출력하려고 합니다

37
00:03:43,000 --> 00:03:49,000
이해 못해도 걱정하지 마세요

38
00:03:49,000 --> 00:03:58,000
%d가 a의 값으로 대체된다는 것만 알면 됩니다

39
00:03:58,000 --> 00:04:02,000
hello와 world 사이에 이 변수를 놓겠습니다

40
00:04:02,000 --> 00:04:04,000
문제없이 컴파일했고,

41
00:04:04,000 --> 00:04:06,000
hello 1 world를 보여줍니다

42
00:04:06,000 --> 00:04:08,000
하지만 제가 실수한 부분이 있습니다

43
00:04:08,000 --> 00:04:10,000
이제 무엇인지 보도록 하죠

44
00:04:10,000 --> 00:04:15,000
컴파일러는 제가 실수를 저질렀다고 말할 수 있었습니다

45
00:04:15,000 --> 00:04:18,000
이 컴파일 플래그를 추가하게 되면

46
00:04:18,000 --> 00:04:22,000
더 많은 오류를 발견할 수 있는데,

47
00:04:22,000 --> 00:04:28,000
이러면 컴파일러가 제가 실수한 부분을 컴파일하지 않을겁니다

48
00:04:28,000 --> 00:04:35,000
이제는 오류와 경고를 표시합니다

49
00:04:35,000 --> 00:04:37,000
여기, 경고입니다

50
00:04:37,000 --> 00:04:42,000
a의 값을 가지러 갔고 사용했지만

51
00:04:42,000 --> 00:04:44,000
a에게는 어떠한 값도 없습니다

52
00:04:44,000 --> 00:04:52,000
a를 선언할 때, 값을 주지 않고 선언했습니다

53
00:04:52,000 --> 00:04:55,000
이와 같이, a는 어떠한 값도 가질 수 있습니다

54
00:04:55,000 --> 00:04:58,000
컴퓨터는 작은 메모리 덩어리를 가져오고 여기 a에 할당했습니다

55
00:04:58,000 --> 00:05:03,000
이 메모리에 원하는 값을 저장하세요

56
00:05:03,000 --> 00:05:06,000
하지만 이 메모리는 2초 전에 다른 프로그램에서 사용되었을지도 모르고

57
00:05:06,000 --> 00:05:09,000
안에 값이 있을 수 있습니다

58
00:05:09,000 --> 00:05:14,000
또한 시간을 절약하기 위해, 자동으로 0이 setting되지 않습니다

59
00:05:14,000 --> 00:05:17,000
왜냐하면 어떤 값이 있는지는 여러분이 결정하기 때문입니다

60
00:05:17,000 --> 00:05:22,000
만약 0을 원하지 않으면 굳이 그 값으로 초기화할 필요가 없습니다

61
00:05:22,000 --> 00:05:27,000
변수를 선언할 때, 무슨 값이 들어있을지 모릅니다

62
00:05:27,000 --> 00:05:31,000
하지만 대부분의 메모리가 0으로 설정되어서 웬만하면 변수의 값은 0이 될 것입니다

63
00:05:31,000 --> 00:05:35,000
하지만 잠재적으로는 어떠한 값도 가질 수 있습니다

64
00:05:35,000 --> 00:05:40,000
변수에 값을 주는 것은 매우 중요합니다

65
00:05:40,000 --> 00:05:50,000
만약 a = 42를 입력한다면, a에 값 42를 주게 됩니다

66
00:05:50,000 --> 00:05:56,000
이 라인은 a가 42를 변수의 값으로 가진다는 의미로 읽습니다

67
00:05:56,000 --> 00:05:59,000
등호(=)는 할당을 의미하는데,

68
00:05:59,000 --> 00:06:02,000
이는 오른쪽에 있는 것을 왼쪽에 넣는다는 것을 뜻합니다

69
00:06:03,000 --> 00:06:13,000
만약 이를 반대로 쓰면, 42 = a 가 되고

70
00:06:13,000 --> 00:06:16,000
이는 a의 값을 가지고 숫자인 42에 넣습니다

71
00:06:16,000 --> 00:06:20,000
말도 안 되는 소리죠?

72
00:06:20,000 --> 00:06:24,000
컴파일러에서, 다음과 같은 오류를 얻었습니다

73
00:06:24,000 --> 00:06:29,000
왜냐하면 이 값을 할당할 수 없기 때문입니다

74
00:06:29,000 --> 00:06:32,000
그러니 다시 되돌려보죠

75
00:06:32,000 --> 00:06:40,000
컴파일하고 실행해서, hello 42 world로 완벽하게 동작합니다

76
00:06:40,000 --> 00:06:43,000
또 다른 중요한 건, 변수가 선언되기 전에는 사용할 수 없습니다

77
00:06:43,000 --> 00:06:46,000
예를 들어 선언문을 없애면

78
00:06:46,000 --> 00:06:57,000
컴파일러가 a가 무엇인지 알 수 없다고 말합니다

79
00:06:57,000 --> 00:07:02,000
만약 바로 아래에 int a; 입력하고

80
00:07:02,000 --> 00:07:03,000
컴파일을 해도 여전히 동작하지 않습니다

81
00:07:03,000 --> 00:07:09,000
이 전에는 2개의 오류가 있었지만

82
00:07:09,000 --> 00:07:11,000
지금은 오류가 하나만 있음을 알 수 있습니다

83
00:07:11,000 --> 00:07:14,000
이건 정상입니다 위에서부터 아래로 읽으니까요

84
00:07:14,000 --> 00:07:20,000
첫 번째 줄에, a가 선언되지 않아서 오류가 있습니다

85
00:07:20,000 --> 00:07:25,000
두 번째 줄에서, a를 선언했고,

86
00:07:25,000 --> 00:07:30,000
세 번째 줄에서는, 컴파일러가 a를 알고 있기에 오류가 없습니다

87
00:07:30,000 --> 00:07:38,000
이제 모든 것을 제자리로 돌려놓읍시다

86
00:07:38,000 --> 00:07:41,000
우리는 다른 변수, 예를 들어 b를 선언할 수 있습니다

87
00:07:41,000 --> 00:07:45,000
여기에 공백이나 탭을 추가하셔도 됩니다

88
00:07:45,000 --> 00:07:50,000
이렇게 해도 동작합니다

89
00:07:50,000 --> 00:07:52,000
다른 부분을 보여드리겠습니다

90
00:07:52,000 --> 00:07:56,000
변수는 한 번에 하나의 값을 가집니다

91
00:07:56,000 --> 00:08:00,000
그래서 또 다른 printf를 추가하여 그 사이에 a = 12를 쓰고

92
00:08:00,000 --> 00:08:07,000
b를 제거합니다

93
00:08:07,000 --> 00:08:15,000
;을 잊어버렸네요

94
00:08:15,000 --> 00:08:22,000
실행했을 때, hello 42 world가 나옵니다

95
00:08:22,000 --> 00:08:25,000
여기서 a를 정수로 선언하기 때문입니다

96
00:08:25,000 --> 00:08:29,000
그런 다음 값으로 42를 할당하고, 출력합니다

97
00:08:29,000 --> 00:08:40,000
여기서는 값으로 12를 할당해 지금 a는 12입니다

98
00:08:40,000 --> 00:08:45,000
b를 되돌려 값을 89로 주었습니다

99
00:08:45,000 --> 00:08:53,000
이제 a와 b를 출력하고 싶습니다

100
00:08:53,000 --> 00:09:05,000
각 %d는 다음 변수로 대체됩니다

101
00:09:05,000 --> 00:09:08,000
그리고 실행할 때, hello 42 world 89가 나옵니다

102
00:09:08,000 --> 00:09:15,000
hello 12 world 89와 함께요

103
00:09:15,000 --> 00:09:20,000
이제 b = a라고 선언할겁니다

104
00:09:20,000 --> 00:09:22,000
무슨 일이 일어날까요

105
00:09:22,000 --> 00:09:26,000
오른쪽 값을 왼쪽에 복사합니다

106
00:09:26,000 --> 00:09:34,000
여기에서, a의 현재 값을 b에 복사합니다

107
00:09:34,000 --> 00:09:40,000
그리고 a를 수정합니다, a 값은 42이기 때문에 b 값 또한 42일 것입니다

108
00:09:40,000 --> 00:09:45,000
그런 다음 a 값을 변경합니다

109
00:09:45,000 --> 00:09:50,000
그러면 hello 12 world 42이 나와야 합니다, 확인해봅시다

110
00:09:50,000 --> 00:09:54,000
그렇죠

111
00:09:54,000 --> 00:09:56,000
다시 말하지만, 위에서 아래로 한 줄씩 읽습니다

112
00:09:56,000 --> 00:10:00,000
그리고 등호(=)에는 오른쪽 값을 왼쪽에 있는 것에 복사합니다

113
00:10:00,000 --> 00:10:03,000
다음 비디오에서는 변수의 종류에 관해 이야기하려고 합니다

114
00:10:03,000 --> 00:10:06,000
지금은 변수를 어떻게 선언하고

115
00:10:06,000 --> 00:10:08,000
값을 주는지 알고 있습니다

116
00:10:08,000 --> 00:10:10,000
또한, 변수들을 어떻게 사용하는지까지도요

117
00:10:10,000 --> 00:59:59,000
여기 a 값을 b에게 복사했습니다
<< translated by inyang, chelee, mki, yeslee and mseo :) >>
