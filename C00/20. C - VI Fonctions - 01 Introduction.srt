1
00:00:02,360 --> 00:00:05,210
[소개]

2
00:00:05,210 --> 00:00:07,529
이 비디오에서는 함수를 어떻게 만드는지에 대해

3
00:00:07,529 --> 00:00:09,480
배워볼 것입니다

4
00:00:09,480 --> 00:00:11,700
프로그램의 기본 함수인,

5
00:00:11,700 --> 00:00:13,320
예를 들어 main 같은 

6
00:00:13,320 --> 00:00:14,580
함수는 이미 사용해보았습니다

7
00:00:14,580 --> 00:00:17,369
이미 몇 가지 예시에서

8
00:00:17,369 --> 00:00:19,050
printf를 사용해보았는데,

9
00:00:19,050 --> 00:00:20,279
printf도 당연히 함수입니다

10
00:00:20,279 --> 00:00:22,650
오늘은 어떤 식으로

11
00:00:22,650 --> 00:00:24,000
자신만의 함수를 만들고,

12
00:00:24,000 --> 00:00:25,260
동작하게 하는 지,

13
00:00:25,260 --> 00:00:27,240
어떻게 함수를 불러오고,

14
00:00:27,240 --> 00:00:28,740
정의하는지 등에 대해 초점을 맞춰보려고 합니다

15
00:00:28,740 --> 00:00:30,420
자, 이 예시로 시작해보죠

16
00:00:30,420 --> 00:00:34,380
main을 봅시다

17
00:00:34,380 --> 00:00:36,840
컴파일해보면,

18
00:00:36,840 --> 00:00:39,870
아무 일도 일어나지 않습니다

19
00:00:39,870 --> 00:00:41,040
이제부터 아주 간단한 일을 해볼 건데요

20
00:00:41,040 --> 00:00:43,440
우리만의 함수를 만들 것입니다

21
00:00:43,440 --> 00:00:45,600
그러기 위해서,

22
00:00:45,600 --> 00:00:47,039
함수의 첫 번째 키워드는

23
00:00:47,039 --> 00:00:49,620
반환 값의 자료형으로 지정해야 합니다

24
00:00:49,620 --> 00:00:51,629
일단은 간단하게, 

25
00:00:51,629 --> 00:00:53,399
이번 비디오에서는

26
00:00:53,399 --> 00:00:55,980
값을 반환하지 않을 겁니다

27
00:00:55,980 --> 00:00:57,629
‘없음’을 의미하는 "void"라는 키워드를

28
00:00:57,629 --> 00:01:01,140
사용할 것입니다, 첫 번째 키워드는

29
00:01:01,140 --> 00:01:02,910
반환 값의 자료형이어야 합니다

30
00:01:02,910 --> 00:01:04,500
이제 여러분께서는

31
00:01:04,500 --> 00:01:06,450
이 함수에 이름을 붙여야 하는데

32
00:01:06,450 --> 00:01:08,010
여기 "void" 옆에 이름을 줄 수 있는 공간이

33
00:01:08,010 --> 00:01:09,540
적어도 하나는 있어야 합니다.

34
00:01:09,540 --> 00:01:12,119
여기서는 fct라고 부르겠습니다

35
00:01:12,119 --> 00:01:14,880
여러분들은

36
00:01:14,880 --> 00:01:17,100
fct를 선언하고

37
00:01:17,100 --> 00:01:18,060
괄호를 열어, 그 안에

38
00:01:18,060 --> 00:01:19,619
함수의 인자들을 받는 것을 보고 있습니다

39
00:01:19,619 --> 00:01:21,659
간단하게 하기 위해,

40
00:01:21,659 --> 00:01:23,189
void를 넣을 겁니다

41
00:01:23,189 --> 00:01:25,619
두 번째 비디오에서도 쓸거예요

42
00:01:25,619 --> 00:01:27,479
그래서 아무것도 반환하지 않고,

43
00:01:27,479 --> 00:01:28,530
어떠한 매개 변수를 받지 않습니다

44
00:01:28,530 --> 00:01:32,009
fct라고 부릅시다, 자, 이 함수에서

45
00:01:32,009 --> 00:01:33,540
무슨 일이 일어날까요?

46
00:01:33,540 --> 00:01:35,130
반복문, 조건문처럼 모든 함수는

47
00:01:35,130 --> 00:01:36,600
범위를 갖고 있습니다

48
00:01:36,600 --> 00:01:38,549
범위를 선언하고

49
00:01:38,549 --> 00:01:40,439
이 범위 내의 모든 것들은

50
00:01:40,439 --> 00:01:42,420
함수를 호출할 때 동작합니다

51
00:01:42,420 --> 00:01:44,430
여기에서는 printf를 사용해서,

52
00:01:44,430 --> 00:01:46,950
"Coucou 42"를 "\n"과 함께 출력하려고 합니다

53
00:01:46,950 --> 00:01:50,970
아주 간단합니다

54
00:01:50,970 --> 00:01:53,579
컴파일해보면, 함수를 불러오지 않았기 때문에

55
00:01:53,579 --> 0001:55,770
여전히 아무 일도 일어나지 않습니다

56
00:01:55,770 --> 00:01:57,090
그 함수를 호출하는 건

57
00:01:57,090 --> 00:01:59,759
아주 간단합니다,

58
00:01:59,759 --> 00:02:02,250
이름을 fct로 지었으니 fct 함수를 호출합니다

59
00:02:02,250 --> 00:02:04,020
어떠한 매개 변수도 필요 없습니다

60
00:02:04,020 --> 00:02:07,459
그래서 아무것도 주지 않습니다, ;도 쓰고요

61
00:02:07,459 --> 00:02:09,258
여기, 여기요

62
00:02:09,258 --> 00:02:11,659
이제 컴파일하고 실행해보면

63
00:02:11,659 --> 00:02:12,920
"Coucou 42"가 출력되는

64
00:02:12,920 --> 00:02:16,400
함수 fct가 호출되었습니다, 사실,

65
00:02:16,400 --> 00:02:18,230
함수의 목적은

66
00:02:18,230 --> 00:02:20,780
코드를 다시 작성하지 않고도

67
00:02:20,780 --> 00:02:23,329
반복해서 사용하는 겁니다

68
00:02:23,329 --> 00:02:24,860
간단한 예를 들자면,

69
00:02:24,860 --> 00:02:26,390
"Coucou 42"를 여러 번 출력하고 싶습니다

70
00:02:26,390 --> 00:02:28,549
그냥 fct를 여러 번 호출하면,

71
00:02:28,549 --> 00:02:32,569
"Coucou 42"가

72
00:02:32,569 --> 00:02:35,720
3번 출력됩니다

73
00:02:35,720 --> 00:02:37,730
제 함수에는 단 하나의 명령만

74
00:02:37,730 --> 00:02:38,930
있었습니다, "Coucou 42"를

75
00:02:38,930 --> 00:02:41,930
한 번 더 출력하고 싶다고 생각해보세요

76
00:02:41,930 --> 00:02:45,230
간단하게 "Coucou"라고 하면 되겠네요

77
00:02:45,230 --> 00:02:47,239
컴파일해보면…

78
00:02:47,239 --> 00:02:47,989
여기, 여기요

79
00:02:47,989 --> 00:02:50,870
"Coucou 42" 다음에 “Coucou”가 출력됩니다

80
00:02:50,870 --> 00:02:52,970
main에서

81
00:02:52,970 --> 00:02:54,500
한 번 호출하면, 여기로 옵니다

82
00:02:54,500 --> 00:02:57,290
짠!

83
00:02:57,290 --> 00:02:58,790
"Coucou 42"를 출력하고,

84
00:02:58,790 --> 00:02:59,750
"Coucou"를 출력합니다

85
00:02:59,750 --> 00:03:01,609
다시 fct를 호출해,

86
00:03:01,609 --> 00:03:05,299
다시 시작합니다… 결과적으로

87
00:03:05,299 --> 00:03:07,879
6개의 문자열이 보입니다

88
00:03:07,879 --> 00:03:09,230
함수를 이해할 때

89
00:03:09,230 --> 00:03:11,599
정의된 함수명을 그대로 사용해서

90
00:03:11,599 --> 00:03:13,250
불러오는 것이

91
00:03:13,250 --> 00:03:14,840
중요합니다, 만약에

92
00:03:14,840 --> 00:03:17,480
존재하지 않는 함수를 불러왔다면

93
00:03:17,480 --> 00:03:17,810
동작하지 않을 겁니다

94
00:03:17,810 --> 00:03:21,019
f를 예를 들면, 동작하지 않죠,

95
00:03:21,019 --> 00:03:23,410
프로그램은 알 수 없기 때문입니다

96
00:03:24,440 --> 00:03:27,169
프로그램은 그게 무엇인지 알 수 없기 때문입니다

97
00:03:27,169 --> 00:03:28,910
아무런 매개변수가 없지만,

98
00:03:28,910 --> 00:03:30,199
main에서 불러올 수 있고 

99
00:03:30,199 --> 00:03:31,849
반복적인 행동을 줄일 수 있는

100
00:03:31,849 --> 00:03:33,470
fct 출력 함수를 만드는 방법을

101
00:03:33,470 --> 00:03:35,150
배웠습니다

102
00:03:35,150 --> 00:03:39,069
이 경우는 간단한 출력입니다
<< ranslated by ji-kim, inyang, chelee, mki, yeslee and mseo :) >>
