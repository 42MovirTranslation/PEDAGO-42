1
00:00:00,130 --> 00:00:05,580
이 비디오에서는 변수의 스코프에 대해 설명합니다 

2
00:00:06,220 --> 00:00:10,979
예제를 들어 설명하겠습니다

3
00:00:11,469 --> 00:00:17,038
Main이 있고, 중괄호에 대해 지금까지 설명하지 않았습니다

4
00:00:17,039 --> 00:00:21,419
이 중괄호는 괄호 안에 있는 내용의 유효범위를 나타냅니다

5
00:00:21,490 --> 00:00:24,840
예를 들어, int a와 a = 42를 입력하고 컴파일하면

6
00:00:25,750 --> 00:00:31,379
아무 일도 일어나지 않지만, 문제는 없습니다, 코드는 정확합니다

7
00:00:31,630 --> 00:00:33,630
문제가 정말 없는지 확인하기 위해

8
00:00:33,670 --> 00:00:40,500
경고 등 모든 것을 실제로 확인할 수 있는 플래그를 추가했습니다
문제는 없습니다, 코드는 정확합니다 

9
00:00:41,379 --> 00:00:46,229
이제 여기에 중괄호를 추가하겠습니다

10
00:00:47,140 --> 00:00:51,010
새로운 스코프를 만들었습니다

12
00:00:51,010 --> 00:00:53,489
이 범위는 어떻게 읽어야 할까요?

13
00:00:53,710 --> 00:01:00,930
int a는 새로운 범위 안에서만 선언됩니다, 이 중괄호 사이에서만 존재합니다

14
00:01:02,050 --> 00:01:03,610
이제 컴파일 하려고 하면

15
00:01:03,610 --> 00:01:05,610
무슨 일이 일어날까요?

16
00:01:06,189 --> 00:01:07,420
오류가 있다고 하네요 

17
00:01:07,420 --> 00:01:11,610
a가 사용되지 않았다고 하네요

18
00:01:11,710 --> 00:01:16,860
a는 안쪽의 중괄호 사이에서만 유효하기 때문입니다

19
00:01:16,860 --> 00:01:27,749
바깥쪽 중괄호 사이에서는 선언 되지 않았습니다

20
00:01:28,450 --> 00:01:31,079
그러니까, 이 줄에 도착할 때까지 선언 된 a는 없습니다

22
00:01:31,500 --> 00:01:35,340
하지만 다른 방식으로는 작동할 수 있습니다

23
00:01:37,540 --> 00:01:43,080
이번엔 a가 활용된 코드를 괄호 안에 넣었습니다, 잘 동작할까요?

24
00:01:45,720 --> 00:01:50,639
int a를 바깥 스코프에서 설정하고, 안쪽 스코프에서는 a값을 초기화 했습니다

25
00:01:50,639 --> 00:01:55,270
이제 컴파일이 잘 됩니다

26
00:01:55,270 --> 00:01:57,219
왜일까요?

29
00:01:57,219 --> 00:02:02,219
안쪽의 괄호 사이에 있을 때 우리는 동시에 바깥 괄호의 범위 안에 있습니다

30
00:02:02,409 --> 00:02:06,779
a는 바깥 괄호에서 선언되었습니다, 이 선언은 여전히 유효합니다

31
00:02:08,350 --> 00:02:12,340
그래서 이 스코프 안에서 a를 사용할 수 있습니다

32
00:02:12,490 --> 00:02:14,499
스코프란 아주 간단합니다, 두 괄호 사이에서 일어나는 일이죠

33
00:02:15,110 --> 00:02:21,160
마지막으로 팁이 될 만한 걸 알려드리죠

34
00:02:21,680 --> 00:02:25,269
파일의 맨 위와 맨 아래에 보이지 않는 괄호가 있습니다

35
00:02:26,030 --> 00:02:29,050
즉 여기에 int a를 입력해도

36
00:02:30,110 --> 00:02:35,620
전체 파일을 포함하는 큰 범위가 있기 때문에

39
00:02:37,130 --> 00:02:40,749
프로그램은 여전히 잘 동작합니다

40
00:02:41,540 --> 00:02:47,950
main함수를 선언합니다, 메인 함수의 범위가 중괄호로 표현됩니다

41
00:02:48,230 --> 00:02:52,779
a는 여전히 여기에 선언되어 있습니다, 이것을 전역 범위라고 합니다

42
00:02:52,780 --> 00:02:54,710
즉, 여기에서 변수 a는 전역 변수입니다

43
00:02:54,710 --> 00:03:00,489
왜냐하면 전역 변수는 모든 함수의 외부에 있지만, 모든 파일을 감싸는 스코프 안에 있기 때문입니다

44
00:03:00,770 --> 00:03:02,770
int a를 아래로 옮겨보겠습니다

45
00:03:03,710 --> 00:03:05,710
코드는 위에서 아래로 읽죠

46
00:03:06,020 --> 00:03:08,860
이 상태로 컴파일 하면 문제가 생깁니다

47
00:03:09,520 --> 00:03:15,700
이 줄에 도착했을 때, a가 선언되지 않았기 때문입니다 

48
00:03:15,880 --> 00:03:21,720
나중에 선언되지만, 그 선언은 도움이 되지 않습니다

49
00:03:21,730 --> 00:03:23,730
그렇기에 문제가 있었습니다

50
00:03:23,990 --> 00:03:25,990
이제 다시 이렇게 함으로써

51
00:03:26,750 --> 00:03:29,260
전역 범위에 있는 a를 선언했습니다

52
00:03:29,860 --> 00:03:35,460
조금 더 해봅시다 

53
00:03:36,400 --> 00:03:42,480
늘 하던대로 printf 함수로 a 값을 출력해봅시다

55
00:03:42,980 --> 00:03:45,009
여기서 a의 값은 어떻게 될까요?

56
00:03:45,290 --> 00:03:50,230
a는 이 범위에서 42의 값을 가졌습니다

57
00:03:50,750 --> 00:03:53,800
여기 도착하면 42일까요? 어디 봅시다

58
00:03:55,250 --> 00:03:56,960
42네요

59
00:03:56,960 --> 00:03:57,920
잘 됩니다

60
00:03:57,920 --> 00:04:08,260
이 범위를 나와도 여전히 이 변수를 사용할 수 있습니다

63
00:04:08,260 --> 00:04:15,680
만약 여기에 새롭게 변수를 선언하면 어떻게 될까요?

66
00:04:15,680 --> 00:04:18,070
여기에 변수 a를 새로 선언합니다

67
00:04:19,209 --> 00:04:21,478
무슨 일이 일어날까요? 문제가 생겼네요

68
00:04:24,039 --> 00:04:29,729
a가 0의 값으로 출력되었습니다, 지금은 0이지만 어느 값이든 가능합니다

69
00:04:29,729 --> 00:04:33,779
변수를 선언하면 최초엔 어느 값도 가지지 않다는 것을 기억하세요

70
00:04:33,780 --> 00:04:34,870
제가 아무 값도 없는 변수를 다시 한 번 불러오면

71
00:04:34,870 --> 00:04:39,780
지역 변수는 지금 당장 메모리에 있는 어떤 값이든 될 수 있습니다

74
00:04:48,639 --> 00:04:53,038
실제로 여기 이 a는 이 스코프 안에서만 유효한 변수임을 알 수 있습니다

75
00:04:53,830 --> 00:04:56,609
이 범위 안에서만 유효합니다

76
00:04:57,039 --> 00:05:01,169
그래서 printf에서 사용하는 a의 경우는

77
00:05:01,380 --> 00:05:04,019
전역 범위의 a입니다

72
00:05:07,000 --> 00:05:12,000
이곳에 새로운 a값을 대입하면

73
00:05:12,000 --> 00:05:15,000
잘 동작할겁니다

74
00:05:15,000 --> 00:05:24,000
대입한 문장을 아래다 넣으면 이 또한 잘 동작합니다

75
00:05:24,000 --> 00:05:28,000
정리하자면 스코프는 중괄호를 기준으로 표현되는, 변수의 범위입니다

76
00:05:28,000 --> 00:05:38,000
또한 전체 파일을 감싸는 전역 스코프가 있습니다

77
00:05:38,000 --> 00:05:43,000
또 다른 중요한 포인트는, 다른 범위에서 변수를 다시 선언할 수 있습니다

78
00:05:43,000 --> 00:05:49,000
예를 들어, 같은 변수를 두 번 선언할 수 없습니다

79
00:05:49,000 --> 00:05:51,000
만약 컴파일하면, 문제가 생깁니다

80
00:05:51,000 --> 00:05:54,000
왜냐면 나는 a를 다시 정의했기 때문이죠

81
00:05:54,000 --> 00:06:00,000
그리고, 한 번만 선언한다면 동작합니다

82
00:06:00,000 --> 00:06:03,000
변수는 범위 내에서 오직 한 번만 선언될 수 있습니다

83
00:06:03,000 --> 00:06:06,000
하지만 범위가 다르면 변수를 다시 정의할 수 있습니다

84
00:06:06,000 --> 00:06:10,000
다시 선언된 변수를 사용할 수 있을거에요

85
00:06:10,000 --> 00:06:15,000
지역 변수 a의 값이 42지만, 범위 밖에서 값이 12로 다시 선언되었습니다

86
00:06:15,000 --> 00:06:23,000
여기 이 스코프에서 마지막으로 선언된 값으로 나오겠죠

87
00:06:23,000 --> 00:59:59,000
이제 여러분은 범위에 대한 모든 것을 알게 되었습니다 
<< translated by inyang, chelee, mki, yeslee, mseo and ji-kim :) >>
